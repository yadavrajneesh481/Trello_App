{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Downloads\\\\TrelloKanban-master\\\\TrelloKanban-master\\\\src\\\\Home\\\\Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Board from \"../Components/Board/Board\";\nimport \"./Dashboard.css\";\nimport CustomInput from \"../Components/CustomInput/CustomInput\";\nimport { fetchBoardList, updateLocalStorageBoards } from \"../Helper/APILayers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const [boards, setBoards] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  async function fetchData() {\n    const boards = await fetchBoardList();\n    setBoards(boards);\n  }\n  const [targetCard, setTargetCard] = useState({\n    boardId: 0,\n    cardId: 0\n  });\n  const addboardHandler = name => {\n    const tempBoardsList = [...boards];\n    tempBoardsList.push({\n      id: Date.now() + Math.random() * 2,\n      title: name,\n      cards: []\n    });\n    setBoards(tempBoardsList);\n  };\n  const removeBoard = boardId => {\n    const boardIndex = boards.findIndex(item => item.id === boardId);\n    if (boardIndex < 0) return;\n    const tempBoardsList = [...boards];\n    tempBoardsList.splice(boardIndex, 1);\n    setBoards(tempBoardsList);\n  };\n  const addCardHandler = (boardId, title) => {\n    const boardIndex = boards.findIndex(item => item.id === boardId);\n    if (boardIndex < 0) return;\n    const tempBoardsList = [...boards];\n    tempBoardsList[boardIndex].cards.push({\n      id: Date.now() + Math.random() * 2,\n      title,\n      labels: [],\n      date: \"\",\n      tasks: [],\n      desc: \"\"\n    });\n    setBoards(tempBoardsList);\n  };\n  const removeCard = (boardId, cardId) => {\n    const boardIndex = boards.findIndex(item => item.id === boardId);\n    if (boardIndex < 0) return;\n    const tempBoardsList = [...boards];\n    const cards = tempBoardsList[boardIndex].cards;\n    const cardIndex = cards.findIndex(item => item.id === cardId);\n    if (cardIndex < 0) return;\n    cards.splice(cardIndex, 1);\n    setBoards(tempBoardsList);\n  };\n  const updateCard = (boardId, cardId, card) => {\n    const boardIndex = boards.findIndex(item => item.id === boardId);\n    if (boardIndex < 0) return;\n    const tempBoardsList = [...boards];\n    const cards = tempBoardsList[boardIndex].cards;\n    const cardIndex = cards.findIndex(item => item.id === cardId);\n    if (cardIndex < 0) return;\n    tempBoardsList[boardIndex].cards[cardIndex] = card;\n    setBoards(tempBoardsList);\n  };\n  const onDragEnd = (boardId, cardId) => {\n    var _boards$sourceBoardIn, _boards$sourceBoardIn2, _boards$targetBoardIn, _boards$targetBoardIn2;\n    const sourceBoardIndex = boards.findIndex(item => item.id === boardId);\n    if (sourceBoardIndex < 0) return;\n    const sourceCardIndex = (_boards$sourceBoardIn = boards[sourceBoardIndex]) === null || _boards$sourceBoardIn === void 0 ? void 0 : (_boards$sourceBoardIn2 = _boards$sourceBoardIn.cards) === null || _boards$sourceBoardIn2 === void 0 ? void 0 : _boards$sourceBoardIn2.findIndex(item => item.id === cardId);\n    if (sourceCardIndex < 0) return;\n    const targetBoardIndex = boards.findIndex(item => item.id === targetCard.boardId);\n    if (targetBoardIndex < 0) return;\n    const targetCardIndex = (_boards$targetBoardIn = boards[targetBoardIndex]) === null || _boards$targetBoardIn === void 0 ? void 0 : (_boards$targetBoardIn2 = _boards$targetBoardIn.cards) === null || _boards$targetBoardIn2 === void 0 ? void 0 : _boards$targetBoardIn2.findIndex(item => item.id === targetCard.cardId);\n    if (targetCardIndex < 0) return;\n    const tempBoardsList = [...boards];\n    const sourceCard = tempBoardsList[sourceBoardIndex].cards[sourceCardIndex];\n    tempBoardsList[sourceBoardIndex].cards.splice(sourceCardIndex, 1);\n    tempBoardsList[targetBoardIndex].cards.splice(targetCardIndex, 0, sourceCard);\n    setBoards(tempBoardsList);\n    setTargetCard({\n      boardId: 0,\n      cardId: 0\n    });\n  };\n  const onDragEnter = (boardId, cardId) => {\n    if (targetCard.cardId === cardId) return;\n    setTargetCard({\n      boardId: boardId,\n      cardId: cardId\n    });\n  };\n  useEffect(() => {\n    updateLocalStorageBoards(boards);\n  }, [boards]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-nav\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Trello Kanban Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-boards-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-boards\",\n        children: [boards.map(item => /*#__PURE__*/_jsxDEV(Board, {\n          board: item,\n          addCard: addCardHandler,\n          removeBoard: () => removeBoard(item.id),\n          removeCard: removeCard,\n          onDragEnd: onDragEnd,\n          onDragEnter: onDragEnter,\n          updateCard: updateCard\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app-boards-last\",\n          children: /*#__PURE__*/_jsxDEV(CustomInput, {\n            displayClass: \"app-boards-add-board\",\n            editClass: \"app-boards-add-board-edit\",\n            placeholder: \"Enter Board Name\",\n            text: \"Add Board\",\n            buttonText: \"Add Board\",\n            onSubmit: addboardHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"4WJH1vWdj7SbSWA6Gl3QP/gEYr0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Board","CustomInput","fetchBoardList","updateLocalStorageBoards","jsxDEV","_jsxDEV","Dashboard","_s","boards","setBoards","fetchData","targetCard","setTargetCard","boardId","cardId","addboardHandler","name","tempBoardsList","push","id","Date","now","Math","random","title","cards","removeBoard","boardIndex","findIndex","item","splice","addCardHandler","labels","date","tasks","desc","removeCard","cardIndex","updateCard","card","onDragEnd","_boards$sourceBoardIn","_boards$sourceBoardIn2","_boards$targetBoardIn","_boards$targetBoardIn2","sourceBoardIndex","sourceCardIndex","targetBoardIndex","targetCardIndex","sourceCard","onDragEnter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","board","addCard","displayClass","editClass","placeholder","text","buttonText","onSubmit","_c","$RefreshReg$"],"sources":["C:/Users/ADMIN/Downloads/TrelloKanban-master/TrelloKanban-master/src/Home/Dashboard.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Board from \"../Components/Board/Board\";\nimport \"./Dashboard.css\";\nimport CustomInput from \"../Components/CustomInput/CustomInput\";\nimport { ICard, IBoard } from \"../Interfaces/Kanban\";\nimport { fetchBoardList, updateLocalStorageBoards } from \"../Helper/APILayers\";\n\nfunction Dashboard() {\n  const [boards, setBoards] = useState<IBoard[]>([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  async function fetchData() {\n    const boards: IBoard[] = await fetchBoardList();\n    setBoards(boards);\n  }\n  const [targetCard, setTargetCard] = useState({\n    boardId: 0,\n    cardId: 0,\n  });\n\n  const addboardHandler = (name: string) => {\n    const tempBoardsList = [...boards];\n    tempBoardsList.push({\n      id: Date.now() + Math.random() * 2,\n      title: name,\n      cards: [],\n    });\n    setBoards(tempBoardsList);\n  };\n\n  const removeBoard = (boardId: number) => {\n    const boardIndex = boards.findIndex((item: IBoard) => item.id === boardId);\n    if (boardIndex < 0) return;\n\n    const tempBoardsList = [...boards];\n    tempBoardsList.splice(boardIndex, 1);\n    setBoards(tempBoardsList);\n  };\n\n  const addCardHandler = (boardId: number, title: string) => {\n    const boardIndex = boards.findIndex((item: IBoard) => item.id === boardId);\n    if (boardIndex < 0) return;\n\n    const tempBoardsList = [...boards];\n    tempBoardsList[boardIndex].cards.push({\n      id: Date.now() + Math.random() * 2,\n      title,\n      labels: [],\n      date: \"\",\n      tasks: [],\n      desc: \"\",\n    });\n    setBoards(tempBoardsList);\n  };\n\n  const removeCard = (boardId: number, cardId: number) => {\n    const boardIndex = boards.findIndex((item: IBoard) => item.id === boardId);\n    if (boardIndex < 0) return;\n\n    const tempBoardsList = [...boards];\n    const cards = tempBoardsList[boardIndex].cards;\n\n    const cardIndex = cards.findIndex((item) => item.id === cardId);\n    if (cardIndex < 0) return;\n\n    cards.splice(cardIndex, 1);\n    setBoards(tempBoardsList);\n  };\n\n  const updateCard = (boardId: number, cardId: number, card: ICard) => {\n    const boardIndex = boards.findIndex((item) => item.id === boardId);\n    if (boardIndex < 0) return;\n\n    const tempBoardsList = [...boards];\n    const cards = tempBoardsList[boardIndex].cards;\n\n    const cardIndex = cards.findIndex((item) => item.id === cardId);\n    if (cardIndex < 0) return;\n\n    tempBoardsList[boardIndex].cards[cardIndex] = card;\n\n    setBoards(tempBoardsList);\n  };\n\n  const onDragEnd = (boardId: number, cardId: number) => {\n    const sourceBoardIndex = boards.findIndex(\n      (item: IBoard) => item.id === boardId,\n    );\n    if (sourceBoardIndex < 0) return;\n\n    const sourceCardIndex = boards[sourceBoardIndex]?.cards?.findIndex(\n      (item) => item.id === cardId,\n    );\n    if (sourceCardIndex < 0) return;\n\n    const targetBoardIndex = boards.findIndex(\n      (item: IBoard) => item.id === targetCard.boardId,\n    );\n    if (targetBoardIndex < 0) return;\n\n    const targetCardIndex = boards[targetBoardIndex]?.cards?.findIndex(\n      (item) => item.id === targetCard.cardId,\n    );\n    if (targetCardIndex < 0) return;\n\n    const tempBoardsList = [...boards];\n    const sourceCard = tempBoardsList[sourceBoardIndex].cards[sourceCardIndex];\n    tempBoardsList[sourceBoardIndex].cards.splice(sourceCardIndex, 1);\n    tempBoardsList[targetBoardIndex].cards.splice(\n      targetCardIndex,\n      0,\n      sourceCard,\n    );\n    setBoards(tempBoardsList);\n\n    setTargetCard({\n      boardId: 0,\n      cardId: 0,\n    });\n  };\n\n  const onDragEnter = (boardId: number, cardId: number) => {\n    if (targetCard.cardId === cardId) return;\n    setTargetCard({\n      boardId: boardId,\n      cardId: cardId,\n    });\n  };\n\n  useEffect(() => {\n    updateLocalStorageBoards(boards);\n  }, [boards]);\n  return (\n    <div className=\"app\">\n      <div className=\"app-nav\">\n        <h1>Trello Kanban Board</h1>\n      </div>\n      <div className=\"app-boards-container\">\n        <div className=\"app-boards\">\n          {boards.map((item) => (\n            <Board\n              key={item.id}\n              board={item}\n              addCard={addCardHandler}\n              removeBoard={() => removeBoard(item.id)}\n              removeCard={removeCard}\n              onDragEnd={onDragEnd}\n              onDragEnter={onDragEnter}\n              updateCard={updateCard}\n            />\n          ))}\n          <div className=\"app-boards-last\">\n            <CustomInput\n              displayClass=\"app-boards-add-board\"\n              editClass=\"app-boards-add-board-edit\"\n              placeholder=\"Enter Board Name\"\n              text=\"Add Board\"\n              buttonText=\"Add Board\"\n              onSubmit={addboardHandler}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}